using System;
using onesharp;
using onesharp.Binary;

namespace parse
{
    public class parse : useyourmind
    {

        public parse() : base("parse") { }

        public void parse_ruez()
        {
            
            //var кор = Новый.ТекстовыйДокумент();
            //кор.Прочитать(ОбъединитьПути(ТекущийКаталог(), "rutez.xml"));
            //var стр = кор.ПолучитьТекст();
            //стр = Стр.Заменить(стр, "<", Символы.ПС);
            //стр = Стр.Заменить(стр, ">", Символы.ПС);
            //кор.УстановитьТекст(стр);
            //кор.Записать(ОбъединитьПути(ТекущийКаталог(), "rutez.txt"));
            var тез = new treedb(ОбъединитьПути(ТекущийКаталог(), "Тезаурус1"));

            var кор = Новый.ТекстовыйДокумент();
            кор.Прочитать(ОбъединитьПути(ТекущийКаталог(), "rutez.txt"));
            var рр = "";
            var н = 3;

            Структура эл = null;
            Массив ма = null;
            Массив ва = null;
            var св = "";

            while (н < кор.КоличествоСтрок())
            {

                if (н % 1000 == 0)
                {
                    Сообщить(кор.КоличествоСтрок() - н);
                }
                н = н + 1;
                var стр = кор.ПолучитьСтроку(н);
                стр = СокрЛП(стр);
                if (стр == "item")
                {
                    эл = Новый.Структура("rels, words, name");
                    св = "";
                    рр = "";
                    ма = null;
                    ва = null;
                }
                else if (стр == "name")
                {
                    var зн = СокрЛП(кор.ПолучитьСтроку(н + 1));
                    эл["name"] = зн;
                    н = н + 3;
                }
                else if (стр == "rels")
                {
                    ма = Новый.Массив();
                    эл["rels"] = ма;
                    рр = "отн";
                }
                else if (стр == "words")
                {
                    ва = Новый.Массив();
                    эл["words"] = ва;
                    рр = "сл";
                }
                else if (стр == "value")
                {
                    var зн = СокрЛП(кор.ПолучитьСтроку(н + 1));
                    if (рр == "отн")
                    {
                        if (св == "")
                        {
                            св = зн;
                        }
                        else
                        {
                            ма.Добавить(Новый.Структура("Ключ, Значение", св, зн));
                            св = "";
                        }
                    }
                    else if (рр == "сл")
                    {
                        ва.Добавить(зн);
                    }
                }
                else if (стр == "/item")
                {
                    var у = тез.НайтиСтроку(эл["name"] as string, Истина);
                    foreach (Структура св1 in эл["rels"] as Массив)
                    {
                        _Узел ну;
                        if (у._Дочерний == 0)
                        {
                            ну = new _Узел();
                            у._Дочерний = тез.ЗаписатьУзел(ref ну);
                            тез.ЗаписатьУзел(ref у);
                        }
                        else
                        {
                            var д = тез.ПрочитатьУзел(у._Дочерний);

                            while (д._Соседний != 0)
                                д = тез.ПрочитатьУзел(д._Соседний);

                            ну = new _Узел();
                            д._Соседний = тез.ЗаписатьУзел(ref ну);
                            тез.ЗаписатьУзел(ref д);
                        }

                        ну._Имя = тез.НайтиСтроку(св1["Ключ"] as string, Истина)._Код;
                        ну._Значение = тез.НайтиСтроку(св1["Значение"] as string, Истина)._Код;

                        тез.ЗаписатьУзел(ref ну);
                    }

                    var син = тез.НайтиСтроку("СИНСЕТ", Истина);

                    foreach (string св1 in эл["words"] as Массив)
                    {

                        var уу = тез.НайтиСтроку(св1, Истина);

                        _Узел ну;
                        if (уу._Дочерний == 0)
                        {
                            ну = new _Узел();
                            уу._Дочерний = тез.ЗаписатьУзел(ref ну);
                            тез.ЗаписатьУзел(ref уу);
                        }
                        else
                        {
                            var д = тез.ПрочитатьУзел(уу._Дочерний);
                            while (д._Соседний != 0)
                                д = тез.ПрочитатьУзел(д._Соседний);

                            ну = new _Узел();
                            д._Соседний = тез.ЗаписатьУзел(ref ну);
                            тез.ЗаписатьУзел(ref д);
                        }

                        ну._Имя = син._Код;
                        ну._Значение = у._Код;

                        тез.ЗаписатьУзел(ref ну);

                    }
                }
            }

        }

        public void parse_slovar()
        {

            var Словарь = Новый.ТекстовыйДокумент();
            Словарь.Прочитать(ОбъединитьПути(ТекущийКаталог(),"dict.opcorpora.txt"));
            Сообщить("Прочитал словарь");

            var сл = new treedb(ОбъединитьПути(ТекущийКаталог(), "Словарь1"));

            var Номер = Неопределено;
            var нФорма = Неопределено;
            var нЛемма = Неопределено;
            Сообщить(Словарь.КоличествоСтрок());
            var лем = Новый.Соответствие();
            for (int нн = 1; нн <= Словарь.КоличествоСтрок(); нн++)
            {
                if (нн % 1000 == 0)
                {
                    Сообщить(нн);
                }
                var стр = Словарь.ПолучитьСтроку(нн);
                if (стр == "")
                {
                    Номер = Неопределено;
                    нФорма = Неопределено;
                }
                else if (Номер == Неопределено)
                {
                    Номер = стр;
                }
                else
                {
                    var мс = Стр.Разделить(стр, Символы.Таб);

                    var ну = new _Узел();

                    var сФорма = сл.НайтиСтроку(СокрЛП(мс[0]), Истина)._Код;

                    if (нФорма == Неопределено)
                    {
                        нЛемма = лем.Получить(мс[1]);
                        if (нЛемма == Неопределено)
                        {
                            нЛемма = сл.НайтиСтроку(Стр.Заменить(СокрЛП(мс[1]), ",", " "), Истина)._Код;
                            лем.Вставить(мс[1], нЛемма);
                        }
                        
                        нФорма = сФорма;

                        ну._Имя = (int)нФорма;
                        ну._Значение = (int)нЛемма;
                        ну._Атрибут = (int)нЛемма;
                        
                        сл.ЗаписатьУзел(ref ну);
                    }
                    else
                    {
                        var сЛемма = лем.Получить(мс[1]);
                        if (сЛемма == Неопределено)
                        {
                            сЛемма = сл.НайтиСтроку(Стр.Заменить(СокрЛП(мс[1]), ",", " "), Истина)._Код;
                            лем.Вставить(мс[1], сЛемма);
                        }

                        ну._Имя = (int)нФорма;
                        ну._Значение = (int)нЛемма;
                        ну._Атрибут = (int)сЛемма;
                    }

                    var нну = сл.ЗаписатьУзел(ref ну);
                    
                    var у = сл.ПрочитатьУзел((int)сФорма);
                    if (у._Дочерний == 0)
                        у._Дочерний = нну;
                    else
                    {
                        у = сл.ПрочитатьУзел(у._Дочерний);
                        while (у._Соседний != 0)
                            у = сл.ПрочитатьУзел(у._Соседний);
                        у._Соседний = нну;
                    }
                    сл.ЗаписатьУзел(ref у);

                }
            }
        
        }


        public void ЗаписатьСтроку(treedb сл, string знСтрока)
        {

            var буф = БуферДвоичныхДанных.Новый(20);

            //var пКод = 0;
            //var мСтр = Стр.Разделить(знСтрока, " ");
            
            var сСимв = @" .,!?:;()«»""'–…"; // - дефис потом
            for (var н = 1; н <= Стр.Длина(сСимв); н++)
            {
                var сс = Сред(сСимв, н, 1);
                знСтрока = Стр.Заменить(знСтрока, сс, "^" + сс + "^");
            }
            var мСтр = Стр.Разделить(знСтрока, "^");

            foreach (var Слово in мСтр)
            {
                var дКод = 21;
                сл.ОткрытьПотокДанных();
                сл.ПотокДанных.Перейти(21, ПозицияВПотоке.Начало);
                сл.ПотокДанных.Прочитать(буф, 0, 20);
                var _Имя = буф.ПрочитатьЦелое32(12);

                for (var н = 1; н <= Стр.Длина(Слово); н++)
                {
                    var с = КодСимвола(Сред(Слово, н, 1));

                    int нн = дКод;

                    while (!(_Имя == с && буф.ПрочитатьЦелое32(16) == дКод))
                    {
                        var пн = нн;

                        if (_Имя > с)
                            нн = буф.ПрочитатьЦелое32(0);
                        else
                            нн = буф.ПрочитатьЦелое32(4);

                        if (нн == 0)
                        {
                            var буф1 = БуферДвоичныхДанных.Новый(20);
                            буф1.ЗаписатьЦелое32(12, с);
                            буф1.ЗаписатьЦелое32(16, дКод);

                            сл.ОткрытьПотокДанных(Истина);
                            нн = (int)сл.ПотокДанных.Размер();
                            сл.ПотокДанных.Перейти(0, ПозицияВПотоке.Конец);
                            сл.ПотокДанных.Записать(буф1, 0, 20);

                            if (_Имя > с)
                                буф.ЗаписатьЦелое32(0, нн);
                            else
                                буф.ЗаписатьЦелое32(4, нн);
                            сл.ПотокДанных.Перейти(пн, ПозицияВПотоке.Начало);
                            сл.ПотокДанных.Записать(буф, 0, 20);
                            сл.ПотокДанных.СброситьБуферы();

                            сл.ОткрытьПотокДанных();

                            буф = буф1;
                            _Имя = с;
                            break;
                        }

                        сл.ПотокДанных.Перейти(нн, ПозицияВПотоке.Начало);
                        сл.ПотокДанных.Прочитать(буф, 0, 20);
                        _Имя = буф.ПрочитатьЦелое32(12);
                    }

                    дКод = нн;
                }
            }

        }


        public void test()
        {

            var сл = new treedb(ОбъединитьПути(ТекущийКаталог(), "test"));

            //var стр = "АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя0123456789";
            //стр = стр + "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz";

            //var сд = Стр.Длина(стр);

            //for (var н = 1; н <= сд; н++) ЗаписатьСтроку(сл, Сред(стр, н, 1));

            //for (var н1 = 1; н1 <= сд; н1++)
            //{
            //    for (var н = 1; н <= сд; н++) ЗаписатьСтроку(сл, Сред(стр, н1, 1) + Сред(стр, н, 1));
    
            //    for (var н2 = 1; н1 <= сд; н1++)
            //    {
            //        for (var н = 1; н <= сд; н++) ЗаписатьСтроку(сл, Сред(стр, н1, 1) + Сред(стр, н2, 1) + Сред(стр, н, 1));

            //    }

            //}

            Сообщить(сл.НайтиСтроку("мама", Истина)._Код);
            Сообщить(сл.НайтиСтроку("мама", Истина)._Код);

            Сообщить(сл.ПрочитатьСтроку(сл.НайтиСтроку("мама", Истина)._Код));

            Сообщить(сл.НайтиСтроку("мама мыла", Истина)._Код);
            Сообщить(сл.НайтиСтроку("мама мыла", Истина)._Код);

            Сообщить(сл.ПрочитатьСтроку(сл.НайтиСтроку("мама мыла", Истина)._Код));

            Сообщить(сл.НайтиСтроку("мама мыла раму", Истина)._Код);
            Сообщить(сл.НайтиСтроку("мама мыла раму", Истина)._Код);

            Сообщить(сл.ПрочитатьСтроку(сл.НайтиСтроку("мама мыла?", Истина)._Код));
            Сообщить(сл.ПрочитатьСтроку(сл.НайтиСтроку("мама, мыла раму?", Истина)._Код));
        
        }
    }
}
